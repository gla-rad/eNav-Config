# Default values for enav.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  enav_service:
    cloud_config:
      url: "http://eureka.enav:8761/config/"
      branch: "master"
      username: "enav_config_user"
      password: "enav_config_password"
      encryption_key: "encryption_key"
  eureka:
    keystore: ""
    truststore: ""
    config_repo:
      url: "https://git.com/gla-rad/eNav-Config.git"
      branch: "master"
      username: "git_user"
      password: "git_password"
  api_gateway:
    keystore: ""
    truststore: ""
  aton_admin_service:
    keystore: ""
    truststore: ""
  aton_service:
    keystore: ""
    truststore: ""
  aton_service_client:
    keystore: ""
    truststore: ""
  ckeeper:
    keystore: ""
    truststore: ""
  kafka_broker:
    broker_id: "1"
    advertised_listeners: "PLAINTEXT://kafka-broker.enav:9092,PLAINTEXT_HOST://localhost:19092"
    listener_security_protocol_map: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
    process_roles: "broker,controller"
    node_id: "1"
    controller_quorum_voters: "1@localhost:29093"
    kafka_listeners: "PLAINTEXT://kafka-broker.enav:9092,CONTROLLER://localhost:29093,PLAINTEXT_HOST://0.0.0.0:19092"
    inter_broker_listener_name: "PLAINTEXT"
    controller_listener_name: "CONTROLLER"
    cluster_id: "R3JhZElzVGhlQmVzdA"
    offsets_topic_replication_factor: "1"
    message_max_bytes: "10485760"
    max_request_size: "10485760"
  msg_broker:
    keystore: ""
    truststore: ""
  vdes_controller:
    keystore: ""
    truststore: ""
  zookeeper:
    client_port: "2181"
    tick_time: "2000"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "enav-admin"

# Keep a common admin account for all
api-gateway:
  serviceAccount:
    name: "enav-admin"
aton-admin-service:
  serviceAccount:
    name: "enav-admin"
aton-service:
  serviceAccount:
    name: "enav-admin"
aton-service-client:
  serviceAccount:
    name: "enav-admin"
ckeeper:
  serviceAccount:
    name: "enav-admin"
eureka:
  serviceAccount:
    name: "enav-admin"
kafka-broker:
  serviceAccount:
    name: "enav-admin"
msg-broker:
  serviceAccount:
    name: "enav-admin"
vdes-controller:
  serviceAccount:
    name: "enav-admin"
zookeeper:
  serviceAccount:
    name: "enav-admin"

# The ingress is defined in the top level
ingress:
  enabled: true
  name: enav-ingress
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "AUTO_HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/x-forwarded-prefix: "/enav"
  hosts:
    - host: "enav.authority.org"
      paths:
      - path: /enav/(.*)
        pathType: ImplementationSpecific
        serviceName: api-gateway
        servicePort: 8760
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
