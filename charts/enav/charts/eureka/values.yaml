# Default values for eureka.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  enav_service:
    cloud_config:
      url: "http://enav-eureka.enav.svc.k8s:8761/config/"
      branch: "master"
      username: "enav_config_user"
      password: "enav_config_password"
      encryption_key: "encryption_key"
  eureka:
    keystore: ""
    truststore: ""
    config_repo:
      url: "https://git.com/gla-rad/eNav-Config.git"
      branch: "master"
      username: "git_user"
      password: "git_password"
    

replicaCount: 1

image:
  repository: ghcr.io/gla-rad/enav-eureka
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8761

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env:
- name: ENAV_CONFIG_REPO_URL
  valueFrom:
    configMapKeyRef:
      name: eureka-config
      key: config_repo_url
- name: ENAV_CONFIG_REPO_BRANCH
  valueFrom:
    configMapKeyRef:
      name: eureka-config
      key: config_repo_branch
- name: ENAV_CONFIG_REPO_USERNAME
  valueFrom:
    secretKeyRef:
      name: eureka-secrets
      key: config_repo_username
- name: ENAV_CONFIG_REPO_PASSWORD
  valueFrom:
    secretKeyRef:
      name: eureka-secrets
      key: config_repo_password
- name: ENAV_CLOUD_CONFIG_USERNAME
  valueFrom:
    secretKeyRef:
      name: service-secrets
      key: config_username
- name: ENAV_CLOUD_CONFIG_PASSWORD
  valueFrom:
    secretKeyRef:
      name: service-secrets
      key: config_password
- name: ENAV_CONFIG_ENCRYPTION_KEY
  valueFrom:
    secretKeyRef:
      name: eureka-secrets
      key: cloud_config

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: http
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: tmp-volume
    emptyDir: {}
  - name: log-volume
    emptyDir: {}
  - name: ssl-volume
    projected:
      sources:
      - secret:
          name: eureka-secrets
          items:
            - key: keystore
              path: keystore.jks
      - secret:
          name: eureka-secrets
          items:
          - key: truststore
            path: truststore.jks

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tmp-volume
    mountPath: "/tmp"
  - name: log-volume
    mountPath: "/var/log"
  - name: ssl-volume
    mountPath: "/ssl"
    readOnly: true

nodeSelector: {
   "kubernetes.io/os": linux
}

tolerations: []

affinity: {}
