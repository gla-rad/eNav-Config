# Default values for kafka-broker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  kafka_broker:
    broker_id: "1"
    zookeeper_url: "zookeeper.enav-service-architecture:2181"
    advertised_listeners: "PLAINTEXT://kafka-broker.enav:9092,PLAINTEXT_HOST://localhost:19092"
    listener_security_protocol_map: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
    inter_broker_listener_name: "PLANTEXT"
    offsets_topic_replication_factor: "1"
    message_max_bytes: "10485760"
    max_request_size: "10485760"

replicaCount: 1

image:
  repository: confluentinc/cp-kafka
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9092

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

env:
  - name: KAFKA_BROKER_ID
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: broker_id
  - name: KAFKA_ZOOKEEPER_CONNECT
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: zookeeper_url
  - name: KAFKA_ADVERTISED_LISTENERS
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: advertised_listeners
  - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: listener_security_protocol_map
  - name: KAFKA_INTER_BROKER_LISTENER_NAME
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: inter_broker_listener_name
  - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: offsets_topic_replication_factor
  - name: KAFKA_MESSAGE_MAX_BYTES
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: message_max_bytes
  - name: KAFKA_MAX_REQUEST_SIZE
    valueFrom:
      configMapKeyRef:
        name: kafka-broker-config
        key: max_request_size

livenessProbe: {}
#  httpGet:
#    path: /
#    port: http
readinessProbe: {}
#  httpGet:
#    path: /
#    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {
  "kubernetes.io/os": linux
}

tolerations: []

affinity: {}
