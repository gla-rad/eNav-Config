# Configuration Variables
service.variable.eureka.server.name=enav-eureka.enav-service-architecture.svc.grad-rrnav.k8s
service.variable.eureka.server.port=8761
service.variable.keycloak.server.url=<auth_url>
service.variable.keycloak.server.realm=<auth_realm>
service.variable.keycloak.server.client_id=<auth_client_id>
service.variable.keycloak.server.client_secret={cipher}<auth_client_secret>
service.variable.database.server.name=<database_server_hostname>
service.variable.database.server.port=5432
service.variable.database.name=<database_name>
service.variable.database.username={cipher}<database_username>
service.variable.database.password={cipher}<database_password>
service.variable.ssl.keystore.password={cipher}<keystore_password>
service.variable.ssl.truststore.password={cipher}<truststore_password>
service.variable.mcp.identity-registry.server.name=<identity_registry_hostname>

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://${service.variable.eureka.server.name}:${service.variable.eureka.server.port}/eureka/
eureka.client.registryFetchIntervalSeconds=5
eureka.instance.preferIpAddress=true
eureka.instance.leaseRenewalIntervalInSeconds=10
eureka.instance.metadata-map.startup=${random.int}

# Spring-boot Admin Configuration
spring.boot.admin.client.url=http://${service.variable.server.eureka.name}:${service.variable.server.eureka.port}/admin

#TODO: Not sure we need this here
spring.jackson.serialization.write-dates-as-timestamps=false

# Springdoc cconfiguration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.packagesToScan=org.grad.eNav.cKeeper.controllers

# Spring JPA Configuration - MySQL
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.search.backend.directory.root=./lucene/
spring.jpa.properties.hibernate.search.schema_management.strategy=create-or-update
spring.jpa.properties.hibernate.search.backend.analysis.configurer=class:org.grad.eNav.cKeeper.config.CustomLuceneAnalysisConfigurer

# Datasource Configuration
spring.datasource.url=jdbc:postgresql://${service.variable.database.server.name}:${service.variable.database.server.port}/${service.variable.database.name}
spring.datasource.username=${service.variable.database.username}
spring.datasource.password=${service.variable.database.password}

## Keycloak Configuration
spring.security.oauth2.client.registration.keycloak.client-id=${service.variable.keycloak.server.client_id}
spring.security.oauth2.client.registration.keycloak.client-secret=${service.variable.keycloak.server.client_secret}
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${service.variable.keycloak.server.url}/realms/${service.variable.keycloak.server.realm}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=${service.variable.keycloak.server.url}/realms/${service.variable.keycloak.server.realm}

# Open the correct resources without authentication
#gla.rad.ckeeper.resources.open:/,/index,/webjars/**,/css/**,/lib/**,/images/**,/src/**,/api/signatures/mmsi/verify/**

# Front-end Information
gla.rad.ckeeper.info.name=Certificate Keeper
gla.rad.ckeeper.info.version=${spring.application.version}
gla.rad.ckeeper.info.operatorName=Research and Development Directorate of GLA of UK and Ireland
gla.rad.ckeeper.info.operatorContact=Nikolaos.Vastardis@gla-rad.org
gla.rad.ckeeper.info.operatorUrl=https://www.gla-rad.org/
gla.rad.ckeeper.info.copyright=\u00A9 2024 GLA Research & Development

# MCP Configuration
gla.rad.ckeeper.mcp.host=${service.variable.mcp.identity-registry.server.name}
gla.rad.ckeeper.mcp.organisation=grad
gla.rad.ckeeper.mcp.mcpOrgPrefix=urn:mrn:mcp:org:mcc
gla.rad.ckeeper.mcp.mcpEntityPrefix=urn:mrn:mcp
gla.rad.ckeeper.mcp.mcpEntitySuffix=mcc
gla.rad.ckeeper.mcp.keyStore=/ssl/keystore.jks
gla.rad.ckeeper.mcp.keyStorePassword=${service.variable.ssl.keystore.password}
gla.rad.ckeeper.mcp.keyStoreType=JKS
gla.rad.ckeeper.mcp.trustStore=/ssl/truststore.jks
gla.rad.ckeeper.mcp.trustStorePassword=${service.variable.ssl.trustStore.password}
gla.rad.ckeeper.mcp.trustStoreType=JKS
gla.rad.ckeeper.mcp.trustStore.rootCertificate.alias=mcp-root
gla.rad.ckeeper.mcp.trustStore.rootCertificate.thumbprintAlgorithm=SHA-1

# X509 Certificate Configuration
gla.rad.ckeeper.x509.keypair.curve=secp384r1
gla.rad.ckeeper.x509.cert.algorithm=SHA3-384withECDSA
gla.rad.ckeeper.x509.cert.dirName=C = GB, O = urn:mrn:mcp:org:mcc:grad, OU = user, CN = Admin Admin, UID = urn:mrn:mcp:user:mcc:grad:admin, emailAddress = glaresearchdevelopment@gmail.com
gla.rad.ckeeper.x509.cert.yearDuration=1
